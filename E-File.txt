// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Mr_Printer

//@version=5
indicator(title="PINGS_OG", shorttitle="PINGS_OG", overlay=true)

leftBars  = input(15, title = "Left Bars")
rightBars  = input(15, title = "Right Bars")
volumeThresh  = input(20, title = "Volume Threshold")
pivotFallOff = input(0.1, title = "Pivot Fall Off")
pivotFallOffOpen = input(0.1, title = "Pivot Fall Off Open")

highUsePivot = ta.pivothigh(close,leftBars, rightBars)[1]
lowUsePivot = ta.pivotlow(close,leftBars, rightBars)[1]

var float lastHighPivot = na
var float lastLowPivot = na

if not na(highUsePivot)
    lastHighPivot := highUsePivot
if not na(lowUsePivot)
    lastLowPivot := lowUsePivot

r1 = plot(lastHighPivot, color=ta.change(lastHighPivot) ? na : color.red,  linewidth=2, title="Resistance")
s1 = plot(lastLowPivot, color=ta.change(lastLowPivot) ? na : color.blue,  linewidth=2, title="Support")

short = ta.ema(volume, 3)
long = ta.ema(volume, 6) 
osc = 100 * ((short - long) / long)

plotchar(osc, 'osc', '')

higherTimeframeClose = request.security(syminfo.tickerid, "240", close)
testEma = ta.ema(higherTimeframeClose,20)


conditionForB = ta.crossover(close, lastHighPivot) and not (open - low > close - open) and osc > volumeThresh 
conditionForS = ta.crossunder(close, lastLowPivot) and not (open - close < high - open) and osc > volumeThresh

conditionForB_TEST = ta.crossover(close,lastHighPivot) and not (open - low > close - open) and osc > volumeThresh and close > testEma and (((close-lastHighPivot)/lastHighPivot)*100 < pivotFallOff) and (((lastHighPivot-open)/lastHighPivot)*100 < pivotFallOffOpen)
conditionForS_TEST = ta.crossunder(close,lastLowPivot) and not (open - close < high - open) and osc > volumeThresh and close < testEma and (((lastLowPivot-close)/lastLowPivot)*100 < pivotFallOff) and (((open-lastLowPivot)/lastLowPivot)*100 < pivotFallOffOpen)


plotshape(series=conditionForB, title="Buy Signal", text='BUY', style=shape.labelup, location=location.belowbar, color=color.green, textcolor=color.white, size=size.tiny)
plotshape(series=conditionForS, title="Sell Signal", text='SELL', style=shape.labeldown, location=location.abovebar, color=color.maroon, textcolor=color.white, size=size.tiny)

plotshape(series=conditionForB_TEST, title="Buy Signal TEST", text='B_T', style=shape.labeldown, location=location.abovebar, color=color.olive, textcolor=color.black, size=size.tiny)
plotshape(series=conditionForS_TEST, title="Sell Signal TEST", text='S_T', style=shape.labelup, location=location.belowbar, color=color.fuchsia, textcolor=color.black, size=size.tiny)

if conditionForB
    alert("BUY\n{\n \"action\": \"BUY\", \n\"price\": " + str.tostring(close) + ", \n\"open\": " + str.tostring(open) + ", \n\"volume\": " + str.tostring(volume) + ", \n\"ticker\": \"" + syminfo.ticker + "\"\n}")

if conditionForS
    alert("SELL\n{\n \"action\": \"SELL\", \n\"price\": " + str.tostring(close) + ", \n\"open\": " + str.tostring(open) + ", \n\"volume\": " + str.tostring(volume) + ", \n\"ticker\": \"" + syminfo.ticker + "\"\n}")


if conditionForB_TEST
    alert("BUY_TEST\n{\n \"action\": \"BUY\", \n\"price\": " + str.tostring(close) + ", \n\"open\": " + str.tostring(open) + ", \n\"volume\": " + str.tostring(volume) + ", \n\"ticker\": \"" + syminfo.ticker + "\"\n}")

if conditionForS_TEST
    alert("SELL_TEST\n{\n \"action\": \"SELL\", \n\"price\": " + str.tostring(close) + ", \n\"open\": " + str.tostring(open) + ", \n\"volume\": " + str.tostring(volume) + ", \n\"ticker\": \"" + syminfo.ticker + "\"\n}")